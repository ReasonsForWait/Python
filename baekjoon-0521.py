# 단어의 개수

# 문제
# 영어 대소문자와 공백으로 이루어진 문자열이 주어진다. 이 문자열에는 몇 개의 단어가 있을까? 이를 구하는 프로그램을 작성하시오. 단, 한 단어가 여러 번 등장하면 등장한 횟수만큼 모두 세어야 한다.

# 입력
# 첫 줄에 영어 대소문자와 공백으로 이루어진 문자열이 주어진다. 이 문자열의 길이는 1,000,000을 넘지 않는다. 단어는 공백 한 개로 구분되며, 공백이 연속해서 나오는 경우는 없다. 또한 문자열은 공백으로 시작하거나 끝날 수 있다.

# 출력
# 첫째 줄에 단어의 개수를 출력한다.

str1 = input().split()

print(len(str1))

#---------------------------------------------------------------------------------------------------------------------------------------------------

# 상수

# 문제
# 상근이의 동생 상수는 수학을 정말 못한다. 상수는 숫자를 읽는데 문제가 있다. 이렇게 수학을 못하는 상수를 위해서 상근이는 수의 크기를 비교하는 문제를 내주었다. 상근이는 세 자리 수 두 개를 칠판에 써주었다. 그 다음에 크기가 큰 수를 말해보라고 했다.

# 상수는 수를 다른 사람과 다르게 거꾸로 읽는다. 예를 들어, 734와 893을 칠판에 적었다면, 상수는 이 수를 437과 398로 읽는다. 따라서, 상수는 두 수중 큰 수인 437을 큰 수라고 말할 것이다.

# 두 수가 주어졌을 때, 상수의 대답을 출력하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 상근이가 칠판에 적은 두 수 A와 B가 주어진다. 두 수는 같지 않은 세 자리 수이며, 0이 포함되어 있지 않다.

# 출력
# 첫째 줄에 상수의 대답을 출력한다.

n, m = input().split()

print(n[::-1]) if int(n[::-1]) > int(m[::-1]) else print(m[::-1])

#---------------------------------------------------------------------------------------------------------------------------------------------------

# 다이얼

alpha = {'A' : 3, 'B' : 3, 'C' : 3, 'D' : 4, 'E' : 4, 'F' : 4, 'G' : 5, 'H' : 5, 'I' : 5, 'J' : 6, 'K' : 6, 'L' : 6, 'M' : 7, 'N' : 7, 'O' : 7, 'P' : 8, 'Q' : 8, 'R' : 8, 'S' : 8,
         'T' : 9, 'U' : 9, 'V' : 9, 'W' : 10, 'X' : 10, 'Y' : 10, 'Z' : 10}

str1 = input()

result = 0

for i in str1:
    result += alpha[i]

print(result)